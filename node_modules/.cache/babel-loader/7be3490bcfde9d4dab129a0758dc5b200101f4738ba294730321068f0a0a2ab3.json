{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport Alert from '@mui/material/Alert';\nconst API_ENDPOINT = \"https://api.github.com/\";\nconst client = axios.create({\n  baseURL: API_ENDPOINT,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst clientCustom = axios.create({\n  baseURL: API_ENDPOINT\n});\nclass DataService {\n  static get(path = \"\") {\n    return client({\n      method: \"GET\",\n      url: path\n    });\n  }\n  static postFormData(path = '', data = {}) {\n    console.log('ðŸš€ ~ file: dataService.js ~ line 29 ~ DataService ~ post ~ data', data);\n    return clientCustom({\n      method: 'POST',\n      url: path,\n      data\n    });\n  }\n  static post(path = \"\", data = {}, optionalHeader = {}) {\n    return client({\n      method: \"POST\",\n      url: path,\n      data,\n      headers: {\n        ...optionalHeader\n      }\n    });\n  }\n  static patch(path = \"\", data = {}) {\n    return client({\n      method: \"PATCH\",\n      url: path,\n      data: data\n    });\n  }\n  static delete(path = \"\") {\n    return client({\n      method: \"DELETE\",\n      url: path\n    });\n  }\n  static put(path = \"\", data = {}) {\n    return client({\n      method: \"PUT\",\n      url: path,\n      data: data\n    });\n  }\n}\n\n/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */\nlet flag = false;\nclient.interceptors.request.use(config => {\n  // do something before executing the request\n  // For example tag along the bearer access token to request header or set a cookie\n\n  const requestConfig = config;\n  const {\n    headers\n  } = config;\n  requestConfig.headers = {\n    ...headers\n  };\n  return requestConfig;\n});\nclient.interceptors.response.use(response => {\n  // console.log('interception : ', response.data.message)\n  if (response.data.statusCode == 200) {} else if (response.data.Alert == \"Action successfully performed for date\") {\n    //  console.log('Welcom Welcome Welciome ')\n  } else if (response.data.Alert == \"Attendance profile updated successfully\") {} else if (response.data.Alert == \"\") {} else if (response.data.messageCode == \"BALANCE_CREATED\") {} else if (response.data.Alert == \"Date created successfully\") {} else {\n    Alert(`${response.data.message}`);\n  }\n  return response;\n}, error => {\n  /**\r\n   * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n   * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n   */\n  const {\n    response\n  } = error;\n  const originalRequest = error.config;\n  if (response) {\n    Alert(`${response.data.message}`);\n  }\n  return Promise.reject(error);\n});\nexport { DataService };","map":{"version":3,"names":["React","axios","Alert","API_ENDPOINT","client","create","baseURL","headers","clientCustom","DataService","get","path","method","url","postFormData","data","console","log","post","optionalHeader","patch","delete","put","flag","interceptors","request","use","config","requestConfig","response","statusCode","messageCode","message","error","originalRequest","Promise","reject"],"sources":["D:/React-js-prac-Hritik/my-app/src/config/dataservice/Dataservice.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Alert from '@mui/material/Alert';\r\n\r\n\r\nconst API_ENDPOINT = \"https://api.github.com/\"; \r\n\r\n\r\n\r\n\r\nconst client = axios.create({\r\n  baseURL: API_ENDPOINT,\r\n  headers: {\r\n  \r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst clientCustom = axios.create({\r\n    baseURL: API_ENDPOINT,\r\n   \r\n  });\r\nclass DataService {\r\n  static get(path = \"\") {\r\n    return client({\r\n      method: \"GET\",\r\n      url: path,\r\n\r\n    });\r\n  }\r\n  static postFormData(path = '', data = {}) {\r\n    console.log(\r\n      'ðŸš€ ~ file: dataService.js ~ line 29 ~ DataService ~ post ~ data',\r\n      data,\r\n    );\r\n    return clientCustom({\r\n      method: 'POST',\r\n      url: path,\r\n      data,\r\n     \r\n    });\r\n  }\r\n\r\n  static post(path = \"\", data = {}, optionalHeader = {}) {\r\n    return client({\r\n      method: \"POST\",\r\n      url: path,\r\n      data,\r\n      headers:{ ...optionalHeader },\r\n    });\r\n  }\r\n\r\n  static patch(path = \"\", data = {}) {\r\n    return client({\r\n      method: \"PATCH\",\r\n      url: path,\r\n      data: data,\r\n    \r\n    });\r\n  }\r\n\r\n  static delete(path = \"\") {\r\n    return client({\r\n      method: \"DELETE\",\r\n      url: path,\r\n    \r\n    });\r\n  }\r\n\r\n  static put(path = \"\", data = {}) {\r\n    return client({\r\n      method: \"PUT\",\r\n      url: path,\r\n      data: data,\r\n    \r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * axios interceptors runs before and after a request, letting the developer modify req,req more\r\n * For more details on axios interceptor see https://github.com/axios/axios#interceptors\r\n */\r\nlet flag = false;\r\nclient.interceptors.request.use((config) => {\r\n  // do something before executing the request\r\n  // For example tag along the bearer access token to request header or set a cookie\r\n\r\n  const requestConfig = config;\r\n\r\n  const { headers } = config;\r\n  requestConfig.headers = {\r\n    ...headers,\r\n  \r\n  };\r\n\r\n  return requestConfig;\r\n});\r\n\r\nclient.interceptors.response.use(\r\n  (response) => {\r\n    // console.log('interception : ', response.data.message)\r\n    if (response.data.statusCode == 200) {\r\n    } else if (\r\n      response.data.Alert == \"Action successfully performed for date\"\r\n    ) {\r\n      //  console.log('Welcom Welcome Welciome ')\r\n    } else if (\r\n      response.data.Alert == \"Attendance profile updated successfully\"\r\n    ) {\r\n    } else if (response.data.Alert == \"\") {\r\n    } else if (response.data.messageCode == \"BALANCE_CREATED\") {\r\n    } else if (response.data.Alert == \"Date created successfully\") {\r\n    } else {\r\n        Alert(`${response.data.message}`);\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    /**\r\n     * Do something in case the response returns an error code [3**, 4**, 5**] etc\r\n     * For example, on token expiration retrieve a new access token, retry a failed request etc\r\n     */\r\n    const { response } = error;\r\n    const originalRequest = error.config;\r\n    if (response) {\r\n        Alert(`${response.data.message}`);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\nexport { DataService };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}