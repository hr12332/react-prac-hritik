{"ast":null,"code":"import actions from \"./actions\";\nimport { DataService } from \"../../config/dataservice/Dataservice\";\nimport { API } from \"../../config/api\";\nimport { Alert } from \"@mui/material\";\nconst {\n  getRepositoryData\n} = actions;\nexport const getRepository = () => {\n  return async dispatch => {\n    const query = \"created:>2017-10-22\";\n    const sort = \"stars\";\n    const order = \"desc\";\n    const page = \"1\";\n    const fullUrl = `${API.repos.get}?q=${query}&sort=${sort}&order=${order}&page=${page}`;\n    try {\n      const getData = await DataService.get(fullUrl);\n      if (!getData.data.error) {\n        dispatch(getRepositoryData(getData.data));\n        return true;\n      } else {\n        // Assuming `getData.data.message` contains the error message\n        return false;\n      }\n    } catch (error) {\n      console.error(\"Error fetching repository data:\", error);\n      return false;\n    }\n  };\n};","map":{"version":3,"names":["actions","DataService","API","Alert","getRepositoryData","getRepository","dispatch","query","sort","order","page","fullUrl","repos","get","getData","data","error","console"],"sources":["D:/React-js-prac-Hritik/my-app/src/redux/repos/actioncCreator.js"],"sourcesContent":["import actions from \"./actions\";\r\nimport { DataService } from \"../../config/dataservice/Dataservice\";\r\nimport { API } from \"../../config/api\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nconst { getRepositoryData } = actions;\r\nexport const getRepository = () => {\r\n  return async (dispatch) => {\r\n    const query = \"created:>2017-10-22\";\r\n    const sort = \"stars\";\r\n    const order = \"desc\";\r\n    const page = \"1\";\r\n\r\n    const fullUrl = `${API.repos.get}?q=${query}&sort=${sort}&order=${order}&page=${page}`;\r\n\r\n    try {\r\n      const getData = await DataService.get(fullUrl);\r\n\r\n      if (!getData.data.error) {\r\n        dispatch(getRepositoryData(getData.data));\r\n        return true;\r\n      } else {\r\n        // Assuming `getData.data.message` contains the error message\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching repository data:\", error);\r\n      return false;\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,sCAAsC;AAClE,SAASC,GAAG,QAAQ,kBAAkB;AACtC,SAASC,KAAK,QAAQ,eAAe;AAErC,MAAM;EAAEC;AAAkB,CAAC,GAAGJ,OAAO;AACrC,OAAO,MAAMK,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,KAAK,GAAG,qBAAqB;IACnC,MAAMC,IAAI,GAAG,OAAO;IACpB,MAAMC,KAAK,GAAG,MAAM;IACpB,MAAMC,IAAI,GAAG,GAAG;IAEhB,MAAMC,OAAO,GAAI,GAAET,GAAG,CAACU,KAAK,CAACC,GAAI,MAAKN,KAAM,SAAQC,IAAK,UAASC,KAAM,SAAQC,IAAK,EAAC;IAEtF,IAAI;MACF,MAAMI,OAAO,GAAG,MAAMb,WAAW,CAACY,GAAG,CAACF,OAAO,CAAC;MAE9C,IAAI,CAACG,OAAO,CAACC,IAAI,CAACC,KAAK,EAAE;QACvBV,QAAQ,CAACF,iBAAiB,CAACU,OAAO,CAACC,IAAI,CAAC,CAAC;QACzC,OAAO,IAAI;MACb,CAAC,MAAM;QACL;QACA,OAAO,KAAK;MACd;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD,OAAO,KAAK;IACd;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}